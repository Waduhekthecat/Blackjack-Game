{"ast":null,"code":"const Functions = () => {\n  const calculate = (cards, setScore) => {\n    let total = 0;\n    cards.forEach(card => {\n      if (!card.includes('A')) {\n        if (card.includes('K')) {\n          total += 10;\n        } else if (card.includes('Q')) {\n          total += 10;\n        } else if (card.includes('J')) {\n          total += 10;\n        } else if (card.includes('T')) {\n          total += 10;\n        } else {\n          total += parseInt(card);\n        }\n\n        ;\n      }\n\n      ;\n    });\n    const aces = cards.filter(card => {\n      return card.includes('A');\n    });\n    aces.forEach(() => {\n      if (total + 11 > 21) {\n        total += 1;\n      } else if (total + 11 === 21) {\n        if (aces.length > 1) {\n          total += 1;\n        } else {\n          total += 11;\n        }\n      } else {\n        total += 11;\n      }\n    });\n    setScore(total);\n  };\n};\n\n_c = Functions;\nexport default Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"sources":["/home/josh/projects/llth-blackjack/blackjack/src/blackjack/Javascript.js"],"names":["Functions","calculate","cards","setScore","total","forEach","card","includes","parseInt","aces","filter","length"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAM;AAExB,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACnC,QAAIC,KAAK,GAAG,CAAZ;AACAF,IAAAA,KAAK,CAACG,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAI,CAACA,IAAI,CAACC,QAAL,CAAc,GAAd,CAAL,EAAyB;AACvB,YAAID,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBH,UAAAA,KAAK,IAAE,EAAP;AACD,SAFD,MAGA,IAAIE,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBH,UAAAA,KAAK,IAAE,EAAP;AACD,SAFD,MAGA,IAAIE,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBH,UAAAA,KAAK,IAAE,EAAP;AACD,SAFD,MAGA,IAAIE,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBH,UAAAA,KAAK,IAAE,EAAP;AACD,SAFD,MAEO;AACLA,UAAAA,KAAK,IAAII,QAAQ,CAACF,IAAD,CAAjB;AACD;;AAAA;AACF;;AAAA;AACF,KAjBD;AAkBE,UAAMG,IAAI,GAAGP,KAAK,CAACQ,MAAN,CAAcJ,IAAD,IAAU;AAClC,aAAOA,IAAI,CAACC,QAAL,CAAc,GAAd,CAAP;AACD,KAFY,CAAb;AAGAE,IAAAA,IAAI,CAACJ,OAAL,CAAa,MAAM;AACjB,UAAKD,KAAK,GAAG,EAAT,GAAe,EAAnB,EAAuB;AACrBA,QAAAA,KAAK,IAAE,CAAP;AACD,OAFD,MAGA,IAAKA,KAAK,GAAG,EAAT,KAAiB,EAArB,EAAyB;AACvB,YAAIK,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBP,UAAAA,KAAK,IAAE,CAAP;AACD,SAFD,MAEO;AACPA,UAAAA,KAAK,IAAE,EAAP;AACD;AACF,OANC,MAMK;AACHA,QAAAA,KAAK,IAAE,EAAP;AACD;AACJ,KAbC;AAcFD,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GAtCH;AAwCC,CA1CD;;KAAMJ,S;AA2CN,eAAeA,SAAf","sourcesContent":["const Functions = () => {\n\nconst calculate = (cards, setScore) => {\n    let total = 0;\n    cards.forEach((card) => {\n      if (!card.includes('A')) {\n        if (card.includes('K')) {\n          total+=10\n        } else \n        if (card.includes('Q')) {\n          total+=10\n        } else\n        if (card.includes('J')) {\n          total+=10\n        } else\n        if (card.includes('T')) {\n          total+=10\n        } else {\n          total += parseInt(card);\n        };\n      };\n    });\n      const aces = cards.filter((card) => {\n        return card.includes('A');\n      });\n      aces.forEach(() => {\n        if ((total + 11) > 21) {\n          total+=1\n        } else \n        if ((total + 11) === 21) {\n          if (aces.length > 1) {\n            total+=1\n          } else {\n          total+=11\n        }\n      } else {\n          total+=11\n        }\n    })\n    setScore(total);\n  };\n\n}\nexport default Functions;"]},"metadata":{},"sourceType":"module"}