{"ast":null,"code":"var _jsxFileName = \"/home/josh/projects/llth-blackjack/blackjack/src/blackjack/UI/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Win from '../../imgs/gifs/_blowing_kiss[window]4x.gif';\nimport Lose from '../../imgs/gifs/_laughing_devil[window]4x.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowResults = _ref => {\n  _s();\n\n  let {\n    game,\n    Results,\n    GameState,\n    setGameState\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const [animation, setAnimation] = useState(\"\");\n  useEffect = (() => {\n    if (game !== \"inProgress\" && game !== \"placeBets\") {\n      if (game === Results.blackjack) {\n        setMessage(\"Blackjack!\");\n        setAnimation(Win);\n        setGameState(GameState.bet);\n      }\n\n      ;\n\n      if (game === Results.playerBusts) {\n        setMessage(\"Player Busted!\");\n        setAnimation(Lose);\n        setGameState(GameState.bet);\n      }\n\n      ;\n\n      if (game === Results.dealerBusts) {\n        setMessage(\"Dealer Busted!\");\n        setAnimation(Win);\n        setGameState(GameState.bet);\n      }\n\n      ;\n\n      if (game === Results.playerWins) {\n        setMessage(\"Player Wins!\");\n        setAnimation(Win);\n        setGameState(GameState.bet);\n      }\n\n      ;\n\n      if (game === Results.dealerWins) {\n        setMessage(\"Dealer Wins!\");\n        setAnimation(Win);\n        setGameState(GameState.bet);\n      }\n\n      ;\n\n      if (game === Results.push) {\n        setMessage(\"Push!\");\n        setGameState(GameState.bet);\n      }\n\n      ;\n    }\n  }, [game]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: animation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowResults, \"S6E6BxJkqnBEKD7doyMYLr6JlEs=\");\n\n_c = ShowResults;\nexport default ShowResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowResults\");","map":{"version":3,"sources":["/home/josh/projects/llth-blackjack/blackjack/src/blackjack/UI/Results.js"],"names":["React","useState","useEffect","Win","Lose","ShowResults","game","Results","GameState","setGameState","message","setMessage","animation","setAnimation","blackjack","bet","playerBusts","dealerBusts","playerWins","dealerWins","push"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACI,OAAOC,GAAP,MAAgB,6CAAhB;AACA,OAAOC,IAAP,MAAiB,+CAAjB;;;;AAGJ,MAAMC,WAAW,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,GAA+C;AAChE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,IAAI,MAAM;AACf,QAAII,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,WAAtC,EAAmD;AAC/C,UAAIA,IAAI,KAAKC,OAAO,CAACO,SAArB,EAAgC;AAC5BH,QAAAA,UAAU,CAAC,YAAD,CAAV;AACAE,QAAAA,YAAY,CAACV,GAAD,CAAZ;AACAM,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;;AACG,UAAIT,IAAI,KAAKC,OAAO,CAACS,WAArB,EAAkC;AAC9BL,QAAAA,UAAU,CAAC,gBAAD,CAAV;AACAE,QAAAA,YAAY,CAACT,IAAD,CAAZ;AACAK,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;;AACG,UAAIT,IAAI,KAAKC,OAAO,CAACU,WAArB,EAAkC;AAC9BN,QAAAA,UAAU,CAAC,gBAAD,CAAV;AACAE,QAAAA,YAAY,CAACV,GAAD,CAAZ;AACAM,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;;AACG,UAAIT,IAAI,KAAKC,OAAO,CAACW,UAArB,EAAiC;AAC7BP,QAAAA,UAAU,CAAC,cAAD,CAAV;AACAE,QAAAA,YAAY,CAACV,GAAD,CAAZ;AACAM,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;;AACG,UAAIT,IAAI,KAAKC,OAAO,CAACY,UAArB,EAAiC;AAC7BR,QAAAA,UAAU,CAAC,cAAD,CAAV;AACAE,QAAAA,YAAY,CAACV,GAAD,CAAZ;AACAM,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;;AACG,UAAIT,IAAI,KAAKC,OAAO,CAACa,IAArB,EAA2B;AACvBT,QAAAA,UAAU,CAAC,OAAD,CAAV;AACAF,QAAAA,YAAY,CAACD,SAAS,CAACO,GAAX,CAAZ;AACH;;AAAA;AACxB;AAAC,GA/BO,EA+BL,CAACT,IAAD,CA/BC,CAAT;AAgCA,sBACA;AAAA,4BAAE;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YAAF,eACA;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,YADA;AAAA,kBADA;AAIH,CAxCD;;GAAMP,W;;KAAAA,W;AA0CF,eAAeA,WAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n    import Win from '../../imgs/gifs/_blowing_kiss[window]4x.gif';\n    import Lose from '../../imgs/gifs/_laughing_devil[window]4x.gif';\n\n\nconst ShowResults = ({ game, Results, GameState, setGameState }) => {\n    const [message, setMessage] = useState(\"\");\n    const [animation, setAnimation] = useState(\"\");\n\n    useEffect = (() => {\n        if (game !== \"inProgress\" && game !== \"placeBets\") {\n            if (game === Results.blackjack) {\n                setMessage(\"Blackjack!\")\n                setAnimation(Win);\n                setGameState(GameState.bet)\n            };\n                if (game === Results.playerBusts) {\n                    setMessage(\"Player Busted!\")\n                    setAnimation(Lose);\n                    setGameState(GameState.bet)\n                };\n                    if (game === Results.dealerBusts) {\n                        setMessage(\"Dealer Busted!\")\n                        setAnimation(Win);\n                        setGameState(GameState.bet)\n                    };\n                        if (game === Results.playerWins) {\n                            setMessage(\"Player Wins!\")\n                            setAnimation(Win);\n                            setGameState(GameState.bet)\n                        };\n                            if (game === Results.dealerWins) {\n                                setMessage(\"Dealer Wins!\")\n                                setAnimation(Win);\n                                setGameState(GameState.bet)\n                            };\n                                if (game === Results.push) {\n                                    setMessage(\"Push!\")\n                                    setGameState(GameState.bet)\n                                }; \n        }}, [game]);\n    return(\n    <><div>{message}</div>\n    <div>{animation}</div></>\n    );\n}\n\n    export default ShowResults;"]},"metadata":{},"sourceType":"module"}