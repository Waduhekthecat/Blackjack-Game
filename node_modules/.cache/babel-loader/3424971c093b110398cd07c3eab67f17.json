{"ast":null,"code":"var _jsxFileName = \"/home/josh/projects/llth-blackjack/blackjack/src/blackjack/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material/\";\nimport styledCom from 'styled-components';\nimport Deck from \"./cards/Deck.js\";\nimport Card from \"./cards/RenderCard.js\";\nimport DealCards from './cards/DealCards.js';\nimport Actions from './players/Actions';\nimport Scores from './UI/Scores.js';\nimport Visuals from './UI/Visuals.js'; // Core Game Component\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  // Initializes and holds game state\n  const GameState = {\n    bet: 'bet',\n    init: 'init',\n    playerTurn: 'playerTurn',\n    dealerTurn: 'dealerTurn'\n  };\n  const Deal = {\n    player: 'player',\n    dealer: 'dealer',\n    hidden: 'hidden'\n  };\n  const Results = {\n    playerWins: 'playerWins',\n    dealerWins: 'dealerWins',\n    push: 'push',\n    blackjack: 'blackjack'\n  };\n  const [gameState, setGameState] = useState(GameState.bet);\n  const [balance, setBalance] = useState(1000);\n  const [betSize, setBetSize] = useState(0);\n  const NewDeck = JSON.parse(JSON.stringify(Deck));\n  const [deck, setDeck] = useState(NewDeck);\n  const [side, changeSide] = useState({\n    back: false\n  });\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerCount, setDealerCount] = useState(0);\n  const [playerCount, setPlayerCount] = useState(0);\n  const [game, setGame] = useState(\"\"); // reset prev round\n\n  useEffect(() => {\n    if (gameState === GameState.bet) {\n      if (game === Results.blackjack) {\n        setBalance(Math.round((balance + betSize * 2.5) * 100) / 100);\n      } else if (game === Results.playerWins) {\n        setBalance(Math.round((balance + betSize * 2) * 100) / 100);\n      } else if (game === Results.push) {\n        setBalance(Math.round((balance + betSize * 1) * 100) / 100);\n      }\n\n      resetGame();\n    }\n  }, [gameState]); // Initialize Game\n\n  useEffect(() => {\n    if (gameState === GameState.init) {\n      dealHands();\n      setGameState(GameState.playerTurn);\n    }\n  }, [gameState]); // Update scores\n\n  useEffect(() => {\n    calculate(dealerHand, setDealerScore);\n    setDealerCount(dealerCount + 1);\n  }, [dealerHand]);\n  useEffect(() => {\n    calculate(playerHand, setPlayerScore);\n    setPlayerCount(playerCount + 1);\n  }, [playerHand]); // Player turn\n\n  useEffect(() => {\n    if (gameState === GameState.playerTurn) {\n      if (playerHand.length === 2 && playerScore === 21 && dealerScore < 21) {\n        setTimeout(() => setGame(Results.blackjack), [1000]);\n        setTimeout(() => setGameState(GameState.bet), [3000]);\n      } else if (playerScore > 21) {\n        setTimeout(() => handleBust(), [1000]);\n      }\n    }\n\n    ;\n  }, [playerCount]); // Dealer turn\n\n  useEffect(() => {\n    if (gameState === GameState.dealerTurn) {\n      if (dealerScore >= 17) {\n        checkWin();\n      } else {\n        setTimeout(() => drawCard(Deal.dealer), [300]);\n      }\n    }\n  }, [dealerCount]); // Game functions\n\n  const handleClear = () => {\n    setBetSize(0);\n  };\n\n  const handleMax = () => {\n    setBetSize(balance);\n  };\n\n  const handleClick = e => {\n    let value = e.target.value;\n\n    if (parseInt(betSize) + parseInt(value) > parseInt(balance)) {\n      alert(\"Not Enough Minerals\");\n    } else {\n      setBetSize(parseInt(betSize) + parseInt(value));\n    }\n\n    ;\n  }; // const [side, changeSide] = useState({ back: false });\n\n\n  const dealHands = () => {\n    setTimeout(() => drawCard(Deal.player), [800]);\n    setTimeout(() => drawCard(Deal.hidden), [1300]);\n    setTimeout(() => drawCard(Deal.player), [1800]);\n    setTimeout(() => drawCard(Deal.dealer), [2300]);\n  };\n\n  const drawCard = dealType => {\n    if (deck.length > 0) {\n      const randomIndex = Math.floor(Math.random() * deck.length);\n      var card = deck[randomIndex];\n      deck.splice(randomIndex, 1);\n      setDeck([...deck]);\n      console.log(card, 'Remaining Cards:', deck.length);\n      dealCard(dealType, card);\n    } else {\n      alert('Please wait while dealer shuffles the deck.');\n    }\n  };\n\n  const dealCard = (dealType, card) => {\n    switch (dealType) {\n      case Deal.player:\n        playerHand.push(card);\n        setPlayerHand([...playerHand]);\n        break;\n\n      case Deal.dealer:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n\n      case Deal.hidden:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleBust = () => {\n    if (gameState === GameState.playerTurn) {\n      console.log('Player Busted. Dealer Wins!');\n      setGame(Results.dealerWins);\n      setTimeout(() => setGameState(GameState.bet), [3000]);\n    } else {\n      console.log('Dealer Busted. Player Wins!');\n      setGame(Results.playerWins);\n      setTimeout(() => setGameState(GameState.bet), [3000]);\n    }\n  };\n\n  const checkWin = () => {\n    if (dealerScore > 21) {\n      setTimeout(() => handleBust(), [1000]);\n    } else if (playerScore > dealerScore) {\n      setTimeout(() => setGame(Results.playerWins), [1000]);\n      setTimeout(() => setGameState(GameState.bet), [3000]);\n    } else if (dealerScore > playerScore) {\n      setTimeout(() => setGame(Results.dealerWins), [1000]);\n      setTimeout(() => setGameState(GameState.bet), [3000]);\n    } else {\n      setTimeout(() => setGame(Results.push), [1000]);\n      setTimeout(() => setGameState(GameState.bet), [3000]);\n    }\n  };\n\n  console.table('Dealer: ', dealerHand);\n  console.table('Player: ', playerHand);\n  console.log('DealerScore: ', dealerScore);\n  console.log('PlayerScore: ', playerScore);\n  console.log('Game results: ', game);\n  console.log(gameState); //******* flips over hidden dealer card NEEDS TO BE ADJUSTED TO CURRENT CARD.JS ********//\n\n  const revealCard = () => {\n    dealerHand.filter(card => {\n      if (side === {\n        back: true\n      }) {\n        card = {\n          back: false\n        };\n      }\n\n      ;\n      return card;\n    });\n    setDealerHand([...dealerHand]);\n  };\n\n  const calculate = (cards, setScore) => {\n    let total = 0;\n    cards.forEach(card => {\n      if (!card.includes('A')) {\n        if (card.includes('K')) {\n          total += 10;\n        } else if (card.includes('Q')) {\n          total += 10;\n        } else if (card.includes('J')) {\n          total += 10;\n        } else if (card.includes('T')) {\n          total += 10;\n        } else {\n          total += parseInt(card);\n        }\n\n        ;\n      }\n\n      ;\n    });\n    const aces = cards.filter(card => {\n      return card.includes('A');\n    });\n    aces.forEach(() => {\n      if (total + 11 > 21) {\n        total += 1;\n      } else if (total + 11 === 21) {\n        if (aces.length > 1) {\n          total += 1;\n        } else {\n          total += 11;\n        }\n      } else {\n        total += 11;\n      }\n    });\n    setScore(total);\n  };\n\n  console.log(playerScore); // Player actions\n\n  const handleHit = () => {\n    drawCard(Deal.player);\n  };\n\n  const handleStand = () => {\n    revealCard();\n    setGameState(GameState.dealerTurn);\n    setTimeout(() => setGameState(GameState.bet), [3000]);\n  };\n\n  const handleDeal = () => {\n    setGameState(GameState.init);\n    setBalance(balance - betSize);\n  }; // Resets game state\n\n\n  const resetGame = () => {\n    setPlayerHand([]);\n    setPlayerScore(0);\n    setPlayerCount(0);\n    setDealerHand([]);\n    setDealerScore(0);\n    setDealerCount(0);\n    setBetSize(0);\n    setGame(Results);\n    setGameState(GameState.bet);\n  }; // move to player and dealer components?\n\n\n  const displayScore = () => {\n    if (playerHand.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(DealerTitle, {\n      children: \"DEALER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealerHand, {\n      children: /*#__PURE__*/_jsxDEV(DealerUl, {\n        children: dealerHand.map(c => /*#__PURE__*/_jsxDEV(DealerLi, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            card: c,\n            ...side,\n            height: \"130px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealCards, {\n      balance: balance,\n      betSize: betSize,\n      gameState: gameState,\n      GameState: GameState,\n      handleDeal: handleDeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerUI, {\n      children: /*#__PURE__*/_jsxDEV(Actions, {\n        gameState: gameState,\n        GameState: GameState,\n        handleStand: handleStand,\n        handleHit: handleHit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerHand, {\n      children: /*#__PURE__*/_jsxDEV(PlayerUl, {\n        children: playerHand.map(c => /*#__PURE__*/_jsxDEV(PlayerLi, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            card: c,\n            ...side,\n            height: \"130px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scores, {\n      gameState: gameState,\n      GameState: GameState,\n      playerScore: playerScore,\n      dealerScore: dealerScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Visuals, {\n      betSize: betSize,\n      balance: balance,\n      gameState: gameState,\n      GameState: GameState,\n      playerHand: playerHand,\n      dealerHand: dealerHand,\n      handleClear: handleClear,\n      handleMax: handleMax,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"pIKRvT1SgQjToXK4QPgw2MuN64w=\");\n\n_c = Game;\nexport default Game;\nconst PlayerUI = styledCom(Grid).attrs({\n  container: true\n})`\n  position: absolute;\n  height: 200px;\n  bottom:-3%;\n  font-size: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 0 0 10px black;\n  z-index: 29;\n  color: white;\n  font-family: \"Play\", sans-serif;\n  -webkit--select: none;\n  \n`;\n_c2 = PlayerUI;\nconst Winner = styledCom.h1`\ncolor: white; \n`;\nconst Message = styledCom.div`\n  position: absolute;\n  width: 200px;\n  height: 275px;\n  margin-left:0;\n  top: 50%;\n  justify-content: center;\n  align-items: center;\n`; // Styled Bet Components\n// const Spacing = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   z-index:-10;\n// `;\n// const SetBetSize = styledCom(Grid).attrs({\n//   container: true,\n// })`\n//   position: absolute;\n//   width: 80%;\n//   height: 110px;\n//   margin: 0 auto;\n//   bottom: 1.5%;\n//   display: flex;\n//   color: black;\n//   justify-content: space-evenly;\n//   align-items: center;\n//   z-index: 400;\n// `;\n// const ClearBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n// const MaxBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n// const Grid10 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid20 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid100 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Bet10 = styledCom(Bet_10)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet20 = styledCom(Bet_20)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet50 = styledCom(Bet_50)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet100 = styledCom(Bet_100)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const PlaceBetBtn = styledCom.button`\n//   transform: scale(1);\n//   background: transparent;\n//   width: 100px;\n//   height: 100px;\n//   outline: none;\n//   color: white;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//         transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(1);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const ClearBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const MaxBetBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// Styled Chips Components\n// const Chip10 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg10,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   bottom:-250px;\n//   margin-left:-20px;\n//   z-index: 8;\n// `;\n// const Chip20 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg20,\n// })`transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -80px;\n//   bottom: -200px;\n//   z-index: 6;\n// `;\n// const Chip50 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg50,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -155px;\n//   bottom: -135px;\n//   z-index: 4;\n// `;\n// const Chip100 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg100,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//   \"translateY(-36px)\"};\n//   margin-left: -240px;\n//   bottom: -45px;\n//   z-index: 2;\n// `;\n// const ChipsArea = styledCom(Grid).attrs({\n//   container: true, spacing: 8,\n// })`\n//   position: absolute;\n//   height:100px;\n//   bottom: 20%;\n//   display: inline-block;\n//   justify-content: center;\n//   align-items: center;\n//   pointer-events: none;\n// `;\n// const PlaceChip10 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip20 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip100 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// Styled Dealer Components\n\nconst DealerTitle = styledCom.h1`\nfont: 18px;\ncolor: white;\n`;\n_c3 = DealerTitle;\nconst DealerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\ntop: 10%;\n`;\n_c4 = DealerHand;\nconst DealerUl = styledCom.ul`\nlist-style: none;\n`;\n_c5 = DealerUl;\nconst DealerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`; // Styled Player Components\n\n_c6 = DealerLi;\nconst PlayerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\nbottom: 30%;\n`;\n_c7 = PlayerHand;\nconst PlayerUl = styledCom.ul`\nlist-style: none;\n`;\n_c8 = PlayerUl;\nconst PlayerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n_c9 = PlayerLi;\nconst Container = styledCom.div`\ndisplay:flex;\njustify-content:center;\nposition:absolute;\nheight:100px;\nwidth:100%;\nheight:100%;\n}\n`;\n_c10 = Container;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"PlayerUI\");\n$RefreshReg$(_c3, \"DealerTitle\");\n$RefreshReg$(_c4, \"DealerHand\");\n$RefreshReg$(_c5, \"DealerUl\");\n$RefreshReg$(_c6, \"DealerLi\");\n$RefreshReg$(_c7, \"PlayerHand\");\n$RefreshReg$(_c8, \"PlayerUl\");\n$RefreshReg$(_c9, \"PlayerLi\");\n$RefreshReg$(_c10, \"Container\");","map":{"version":3,"sources":["/home/josh/projects/llth-blackjack/blackjack/src/blackjack/Game.js"],"names":["React","useState","useEffect","Grid","styledCom","Deck","Card","DealCards","Actions","Scores","Visuals","Game","GameState","bet","init","playerTurn","dealerTurn","Deal","player","dealer","hidden","Results","playerWins","dealerWins","push","blackjack","gameState","setGameState","balance","setBalance","betSize","setBetSize","NewDeck","JSON","parse","stringify","deck","setDeck","side","changeSide","back","dealerHand","setDealerHand","dealerScore","setDealerScore","playerHand","setPlayerHand","playerScore","setPlayerScore","dealerCount","setDealerCount","playerCount","setPlayerCount","game","setGame","Math","round","resetGame","dealHands","calculate","length","setTimeout","handleBust","checkWin","drawCard","handleClear","handleMax","handleClick","e","value","target","parseInt","alert","dealType","randomIndex","floor","random","card","splice","console","log","dealCard","table","revealCard","filter","cards","setScore","total","forEach","includes","aces","handleHit","handleStand","handleDeal","displayScore","map","c","PlayerUI","attrs","container","Winner","h1","Message","div","DealerTitle","DealerHand","DealerUl","ul","DealerLi","li","PlayerHand","PlayerUl","PlayerLi","Container"],"mappings":"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,WAAW,EAAEC;AATf;AAAA;AAAA;AAAA;AAAA,YA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA1UD;;GAAMxD,I;;KAAAA,I;AA4UN,eAAeA,IAAf;AAIA,MAAMsF,QAAQ,GAAG7F,SAAS,CAACD,IAAD,CAAT,CAAgB+F,KAAhB,CAAsB;AACrCC,EAAAA,SAAS,EAAE;AAD0B,CAAtB,CAEd;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMF,Q;AAmBN,MAAMG,MAAM,GAAGhG,SAAS,CAACiG,EAAG;AAC5B;AACA,CAFA;AAIA,MAAMC,OAAO,GAAGlG,SAAS,CAACmG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;;AACA,MAAMC,WAAW,GAAGpG,SAAS,CAACiG,EAAG;AACjC;AACA;AACA,CAHA;MAAMG,W;AAKN,MAAMC,UAAU,GAAGrG,SAAS,CAACmG,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,U;AASN,MAAMC,QAAQ,GAAGtG,SAAS,CAACuG,EAAG;AAC9B;AACA,CAFA;MAAMD,Q;AAIN,MAAME,QAAQ,GAAGxG,SAAS,CAACyG,EAAG;AAC9B;AACA;AACA,CAHA,C,CAKA;;MALMD,Q;AAON,MAAME,UAAU,GAAG1G,SAAS,CAACmG,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMO,U;AASN,MAAMC,QAAQ,GAAG3G,SAAS,CAACuG,EAAG;AAC9B;AACA,CAFA;MAAMI,Q;AAIN,MAAMC,QAAQ,GAAG5G,SAAS,CAACyG,EAAG;AAC9B;AACA;AACA,CAHA;MAAMG,Q;AAKN,MAAMC,SAAS,GAAG7G,SAAS,CAACmG,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;OAAMU,S","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Grid } from \"@mui/material/\";\nimport styledCom from 'styled-components';\n\nimport Deck from \"./cards/Deck.js\";\nimport Card from \"./cards/RenderCard.js\";\nimport DealCards from './cards/DealCards.js';\nimport Actions from './players/Actions';\nimport Scores from './UI/Scores.js';\nimport Visuals from './UI/Visuals.js';\n\n// Core Game Component\nconst Game = () => {\n\n  // Initializes and holds game state\n  const GameState = {\n    bet: 'bet',\n    init: 'init',\n    playerTurn: 'playerTurn',\n    dealerTurn: 'dealerTurn',\n  };\n  const Deal = {\n    player: 'player',\n    dealer: 'dealer',\n    hidden: 'hidden'\n  };\n  const Results = {\n    playerWins: 'playerWins',\n    dealerWins: 'dealerWins',\n    push: 'push',\n    blackjack: 'blackjack'\n  }\n\n  const [gameState, setGameState] = useState(GameState.bet);  \n  const [balance, setBalance] = useState(1000);\n  const [betSize, setBetSize] = useState(0);\n  const NewDeck = JSON.parse(JSON.stringify(Deck));\n  const [deck, setDeck] = useState(NewDeck);\n  const [side, changeSide] = useState({ back: false });\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerCount, setDealerCount] = useState(0);\n  const [playerCount, setPlayerCount] = useState(0);\n  const [game, setGame] = useState(\"\");\n\n  // reset prev round\n  useEffect(() => {\n    if (gameState === GameState.bet) {\n      if (game === Results.blackjack) {\n        setBalance(Math.round(\n          (balance + (betSize * 2.5)) * 100) / 100)\n      } else\n      if (game === Results.playerWins) {\n        setBalance(Math.round(\n          (balance + (betSize * 2)) * 100) / 100)\n      } else  \n      if (game === Results.push) {\n        setBalance(Math.round(\n          (balance + (betSize * 1)) * 100) / 100)\n      }\n      resetGame()\n    }\n  }, [gameState])\n\n  // Initialize Game\n  useEffect(() => {\n    if (gameState === GameState.init) {\n      dealHands();\n      setGameState(GameState.playerTurn);\n    }\n  }, [gameState]);\n\n  // Update scores\n  useEffect(() => {\n    calculate(dealerHand, setDealerScore);\n    setDealerCount(dealerCount + 1);\n  }, [dealerHand]);\n  useEffect(() => {\n    calculate(playerHand, setPlayerScore);\n    setPlayerCount(playerCount + 1);\n  }, [playerHand]);\n\n  // Player turn\n  useEffect(() => {\n    if (gameState === GameState.playerTurn) {\n      if (playerHand.length === 2 && playerScore === 21 && dealerScore < 21) {\n        setTimeout(() => setGame(Results.blackjack), [1000])\n        setTimeout(() => setGameState(GameState.bet), [3000])\n      }\n      else if (playerScore > 21) {\n        setTimeout(() => handleBust(), [1000])\n      }\n    };\n  }, [playerCount]);\n\n  // Dealer turn\n  useEffect(() => {\n    if (gameState === GameState.dealerTurn) {\n      if (dealerScore >= 17) {\n        checkWin();\n      }\n      else {\n        setTimeout(()=>\n        drawCard(Deal.dealer), [300])\n      }\n    }\n  }, [dealerCount]);\n\n // Game functions\n  const handleClear = () => {\n    setBetSize(0)\n  };\n  const handleMax = () => {\n    setBetSize(balance)\n  };\n  const handleClick = (e) => {\n    let value = (e.target.value);\n    if (parseInt(betSize)+parseInt(value) > parseInt(balance)){\n      alert(\"Not Enough Minerals\");\n    } else {\n    setBetSize(parseInt(betSize)+parseInt(value))};\n  };\n  // const [side, changeSide] = useState({ back: false });\n  const dealHands = () => {\n    setTimeout(() => drawCard(Deal.player), [800])\n    setTimeout(() => drawCard(Deal.hidden), [1300])\n    setTimeout(() => drawCard(Deal.player), [1800])\n    setTimeout(() => drawCard(Deal.dealer), [2300])\n  };\n  const drawCard = (dealType) => {\n    if (deck.length > 0) {\n      const randomIndex = Math.floor(Math.random() * deck.length);\n      var card = deck[randomIndex];\n      deck.splice(randomIndex, 1);\n      setDeck([...deck]);\n      console.log(card, 'Remaining Cards:', deck.length);\n      dealCard(dealType, card)\n    } else {\n      alert('Please wait while dealer shuffles the deck.');\n    }\n  };\n  const dealCard = (dealType, card) => {\n    switch (dealType) {\n      case Deal.player:\n        playerHand.push(card);\n        setPlayerHand([...playerHand]);\n        break;\n      case Deal.dealer:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n      case Deal.hidden:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleBust = () => {\n    if (gameState === GameState.playerTurn) {\n        console.log('Player Busted. Dealer Wins!')\n        setGame(Results.dealerWins)\n      setTimeout(() => setGameState(GameState.bet), [3000])\n\n    } else {\n      console.log('Dealer Busted. Player Wins!')\n      setGame(Results.playerWins)\n    setTimeout(() => setGameState(GameState.bet), [3000])\n    }\n  };\n  const checkWin = () => {\n    if (dealerScore > 21) {\n      setTimeout(() => handleBust(), \n      [1000])\n    } else\n    if (playerScore > dealerScore) {\n      setTimeout(() => setGame(Results.playerWins), [1000])\n      setTimeout(() => setGameState(GameState.bet), [3000])\n    } else \n    if (dealerScore > playerScore) {\n      setTimeout(() => setGame(Results.dealerWins), [1000])\n      setTimeout(() => setGameState(GameState.bet), [3000])\n    } else {\n      setTimeout(() => setGame(Results.push), [1000])\n      setTimeout(() => setGameState(GameState.bet), [3000])\n    }\n  };\n\n  console.table('Dealer: ', dealerHand)\n  console.table('Player: ', playerHand)\n  console.log('DealerScore: ', dealerScore)\n  console.log('PlayerScore: ', playerScore)\n  console.log('Game results: ', game)\n  console.log(gameState)\n\n\n  //******* flips over hidden dealer card NEEDS TO BE ADJUSTED TO CURRENT CARD.JS ********//\n  const revealCard = () => {\n    dealerHand.filter((card) => {\n      if (side === { back: true }) {\n        card = { back: false }\n      };\n      return card;\n    });\n    setDealerHand([...dealerHand])\n  };\n\n  const calculate = (cards, setScore) => {\n    let total = 0;\n    cards.forEach((card) => {\n      if (!card.includes('A')) {\n        if (card.includes('K')) {\n          total+=10\n        } else \n        if (card.includes('Q')) {\n          total+=10\n        } else\n        if (card.includes('J')) {\n          total+=10\n        } else\n        if (card.includes('T')) {\n          total+=10\n        } else {\n          total += parseInt(card);\n        };\n      };\n    });\n      const aces = cards.filter((card) => {\n        return card.includes('A');\n      });\n      aces.forEach(() => {\n        if ((total + 11) > 21) {\n          total+=1\n        } else \n        if ((total + 11) === 21) {\n          if (aces.length > 1) {\n            total+=1\n          } else {\n          total+=11\n        }\n      } else {\n          total+=11\n        }\n    })\n    setScore(total);\n  };\nconsole.log(playerScore)\n  // Player actions\n  const handleHit = () => {\n    drawCard(Deal.player)\n  };\n  const handleStand = () => {\n    revealCard();\n    setGameState(GameState.dealerTurn);\n    setTimeout(() => setGameState(GameState.bet), [3000])\n  };\n  const handleDeal = () => {\n    setGameState(GameState.init)\n    setBalance(balance - betSize)\n  };\n\n  // Resets game state\n  const resetGame = () => {\n    setPlayerHand([]);\n    setPlayerScore(0);\n    setPlayerCount(0);\n    setDealerHand([]);\n    setDealerScore(0);\n    setDealerCount(0);\n    setBetSize(0);\n    setGame(Results);\n    setGameState(GameState.bet);\n    };\n\n  // move to player and dealer components?\n  const displayScore = () => {\n    if (playerHand.length > 0) {\n      return (\n        <></>\n      );\n    }\n  };\n  return (\n    <Container>\n\n      <DealerTitle>DEALER</DealerTitle>\n      <DealerHand>\n        <DealerUl>\n          {dealerHand.map(c =>\n            <DealerLi key={c}>\n              <Card card={c} {...side} height=\"130px\" />\n            </DealerLi>)}\n        </DealerUl>\n      </DealerHand>\n\n      <DealCards \n        balance={balance}\n        betSize={betSize}\n        gameState={gameState}\n        GameState={GameState} \n        handleDeal={handleDeal}/>\n\n      <PlayerUI>\n        <Actions\n          gameState={gameState} \n          GameState={GameState} \n          handleStand={handleStand} \n          handleHit={handleHit}/>\n      </PlayerUI>\n\n      <PlayerHand>\n        <PlayerUl>\n          {playerHand.map(c => \n            <PlayerLi key={c}>\n              <Card card={c} {...side} height=\"130px\"/>\n            </PlayerLi>)}\n        </PlayerUl>\n      </PlayerHand>\n\n      <Scores \n        gameState={gameState}\n        GameState={GameState}\n        playerScore={playerScore}\n        dealerScore={dealerScore}/>\n\n      <Visuals \n        betSize={betSize}\n        balance={balance}\n        gameState={gameState}\n        GameState={GameState}\n        playerHand={playerHand}\n        dealerHand={dealerHand}\n        handleClear={handleClear}\n        handleMax={handleMax}\n        handleClick={handleClick}/> \n\n    </Container>\n  )\n\n};\n\nexport default Game;\n\n\n\nconst PlayerUI = styledCom(Grid).attrs({\n  container: true,\n})`\n  position: absolute;\n  height: 200px;\n  bottom:-3%;\n  font-size: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 0 0 10px black;\n  z-index: 29;\n  color: white;\n  font-family: \"Play\", sans-serif;\n  -webkit--select: none;\n  \n`;\n\nconst Winner = styledCom.h1`\ncolor: white; \n`;\n\nconst Message = styledCom.div`\n  position: absolute;\n  width: 200px;\n  height: 275px;\n  margin-left:0;\n  top: 50%;\n  justify-content: center;\n  align-items: center;\n`;\n\n// Styled Bet Components\n\n// const Spacing = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   z-index:-10;\n// `;\n\n// const SetBetSize = styledCom(Grid).attrs({\n//   container: true,\n// })`\n//   position: absolute;\n//   width: 80%;\n//   height: 110px;\n//   margin: 0 auto;\n//   bottom: 1.5%;\n//   display: flex;\n//   color: black;\n//   justify-content: space-evenly;\n//   align-items: center;\n//   z-index: 400;\n// `;\n\n// const ClearBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n\n// const MaxBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n\n// const Grid10 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Grid20 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Grid100 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Bet10 = styledCom(Bet_10)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet20 = styledCom(Bet_20)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet50 = styledCom(Bet_50)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet100 = styledCom(Bet_100)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const PlaceBetBtn = styledCom.button`\n//   transform: scale(1);\n//   background: transparent;\n//   width: 100px;\n//   height: 100px;\n//   outline: none;\n//   color: white;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//         transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(1);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n\n// const ClearBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const MaxBetBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n\n// Styled Chips Components\n\n// const Chip10 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg10,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   bottom:-250px;\n//   margin-left:-20px;\n//   z-index: 8;\n// `;\n\n// const Chip20 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg20,\n// })`transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -80px;\n//   bottom: -200px;\n//   z-index: 6;\n// `;\n\n// const Chip50 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg50,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -155px;\n//   bottom: -135px;\n//   z-index: 4;\n// `;\n\n// const Chip100 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg100,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//   \"translateY(-36px)\"};\n//   margin-left: -240px;\n//   bottom: -45px;\n//   z-index: 2;\n// `;\n\n// const ChipsArea = styledCom(Grid).attrs({\n//   container: true, spacing: 8,\n// })`\n//   position: absolute;\n//   height:100px;\n//   bottom: 20%;\n//   display: inline-block;\n//   justify-content: center;\n//   align-items: center;\n//   pointer-events: none;\n// `;\n\n// const PlaceChip10 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip20 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip100 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n\n\n\n// Styled Dealer Components\nconst DealerTitle = styledCom.h1`\nfont: 18px;\ncolor: white;\n`;\n\nconst DealerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\ntop: 10%;\n`;\n\nconst DealerUl = styledCom.ul`\nlist-style: none;\n`;\n\nconst DealerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n\n// Styled Player Components\n\nconst PlayerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\nbottom: 30%;\n`;\n\nconst PlayerUl = styledCom.ul`\nlist-style: none;\n`;\n\nconst PlayerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n\nconst Container = styledCom.div`\ndisplay:flex;\njustify-content:center;\nposition:absolute;\nheight:100px;\nwidth:100%;\nheight:100%;\n}\n`;"]},"metadata":{},"sourceType":"module"}