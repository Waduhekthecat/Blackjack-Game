{"ast":null,"code":"var _jsxFileName = \"/home/josh/projects/llth-blackjack/blackjack/src/blackjack/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material/\";\nimport styledCom from 'styled-components';\nimport Functions from \"./Javascript.js\";\nimport Deck from \"./cards/Deck.js\";\nimport Card from \"./cards/RenderCard.js\";\nimport DealCards from \"./cards/DealCards.js\";\nimport ActionBtns from \"./player/Actions.js\";\nimport Scores from \"./UI/Scores.js\";\nimport Visuals from \"./UI/Visuals.js\";\nimport Win from '../imgs/gifs/_blowing_kiss[window]4x.gif';\nimport Lose from '../imgs/gifs/_laughing_devil[window]4x.gif'; // Core Game Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  //   // Initializes and holds game state\n  const GameState = {\n    bet: 'bet',\n    init: 'init',\n    playerTurn: 'playerTurn',\n    dealerTurn: 'dealerTurn'\n  };\n  const Deal = {\n    player: 'player',\n    dealer: 'dealer',\n    hidden: 'hidden'\n  };\n  const Results = {\n    blackjack: 'blackjack',\n    playerWins: 'playerWins',\n    dealerWins: 'dealerWins',\n    playerBusts: 'playerBusts',\n    dealerBusts: 'dealerBusts',\n    push: 'push'\n  };\n  const [gameState, setGameState] = useState(GameState.bet);\n  const [game, setGame] = useState(\"placeBets\");\n  const [balance, setBalance] = useState(5000);\n  const [betSize, setBetSize] = useState(0);\n  const [deck, setDeck] = useState(Deck);\n  const [hiddenCard, setHiddenCard] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerCount, setDealerCount] = useState(0);\n  const [playerCount, setPlayerCount] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [animation, setAnimation] = useState(\"\"); // Initialize Game\n\n  useEffect(() => {\n    if (gameState === GameState.init) {\n      dealHands();\n      setGameState(GameState.playerTurn);\n    }\n  }, [gameState]); // Update scores\n\n  useEffect(() => {\n    calculate(dealerHand, setDealerScore);\n    setDealerCount(dealerCount + 1);\n  }, [dealerHand, hiddenCard]);\n  useEffect(() => {\n    calculate(playerHand, setPlayerScore);\n    setPlayerCount(playerCount + 1);\n  }, [playerHand]); // Player turn\n\n  useEffect(() => {\n    if (playerCount === 2 && playerScore === 21 && dealerScore !== 21) {\n      setMessage(\"Blackjack!\");\n      setAnimation(Win);\n      setTimeout(() => reset(), [4000]);\n    }\n\n    ;\n\n    if (playerScore > 21) {\n      setGame(Results.playerBusts);\n      setTimeout(() => reset(), [4000]);\n    }\n\n    ;\n  }, [playerCount]); // Dealer turn\n\n  useEffect(() => {\n    if (gameState === GameState.dealerTurn) {\n      if (dealerScore > 21) {\n        setGame(Results.dealerBusts);\n      } else if (dealerScore >= 17 && dealerScore <= 21) {\n        checkWin();\n      } else {\n        setTimeout(() => drawCard(Deal.dealer), [500]);\n      }\n    }\n  }, [dealerCount]); // handle results\n\n  useEffect(() => {\n    if (game === Results.blackjack) {\n      setTimeout(() => setBalance(Math.round((balance + betSize * 2.5) * 100) / 100), [3500]);\n      setTimeout(() => setMessage(\"Blackjack!\"), [1000]);\n      setTimeout(() => setAnimation(Win), [1000]);\n      setTimeout(() => reset(), [4000]);\n    } else if (game === Results.playerBusts) {\n      setTimeout(() => setMessage(\"Player Busted!\"), [1000]);\n      setTimeout(() => setAnimation(Lose), [1000]);\n      setTimeout(() => reset(), [4000]);\n    } else if (game === Results.dealerBusts) {\n      setTimeout(() => setBalance(Math.round((balance + betSize * 2) * 100) / 100), [4000]);\n      setTimeout(() => setMessage(\"Dealer Busted!\"), [1000]);\n      setTimeout(() => setAnimation(Win), [1000]);\n      setTimeout(() => reset(), [4000]);\n    } else if (game === Results.playerWins) {\n      setTimeout(() => setBalance(Math.round((balance + betSize * 2) * 100) / 100), [4000]);\n      setTimeout(() => setMessage(\"Player Wins!\"), [1000]);\n      setTimeout(() => setAnimation(Win), [1000]);\n      setTimeout(() => reset(), [4000]);\n    } else if (game === Results.dealerWins) {\n      setTimeout(() => setMessage(\"Dealer Wins!\"), [1000]);\n      setTimeout(() => setAnimation(Lose), [1000]);\n      setTimeout(() => reset(), [4000]);\n    } else if (game === Results.push) {\n      setTimeout(() => setBalance(Math.round((balance + betSize * 1) * 100) / 100), [4000]);\n      setTimeout(() => setMessage(\"Push!\"), [1000]);\n      setTimeout(() => reset(), [4000]);\n    }\n  }, [game]); // Game functions\n\n  const shuffle = () => {\n    let newDeck = JSON.parse(JSON.stringify(Deck));\n    return setDeck(newDeck);\n  };\n\n  const handleClear = () => {\n    setBetSize(0);\n  };\n\n  const handleMax = () => {\n    setBetSize(balance);\n  };\n\n  const handleClick = e => {\n    let value = e.target.value;\n\n    if (parseInt(betSize) + parseInt(value) > parseInt(balance)) {\n      alert(\"Not Enough Minerals\");\n    } else {\n      setBetSize(parseInt(betSize) + parseInt(value));\n    }\n\n    ;\n  };\n\n  const dealHands = () => {\n    setTimeout(() => drawCard(Deal.player), [800]);\n    setTimeout(() => drawCard(Deal.hidden), [1300]);\n    setTimeout(() => drawCard(Deal.player), [1800]);\n    setTimeout(() => drawCard(Deal.dealer), [2300]);\n    setTimeout(() => setGame(\"inProgress\"), [2800]);\n  };\n\n  const drawCard = dealType => {\n    if (deck.length > 5) {\n      const randomIndex = Math.floor(Math.random() * deck.length);\n      var card = deck[randomIndex];\n      deck.splice(randomIndex, 1);\n      setDeck([...deck]);\n      console.log(card, 'Remaining Cards:', deck.length);\n      dealCard(dealType, card);\n    }\n\n    ;\n\n    if (deck.length <= 5) {\n      shuffle();\n      dealCard(dealType, card);\n    }\n  };\n\n  const dealCard = (dealType, card) => {\n    switch (dealType) {\n      case Deal.player:\n        playerHand.push(card);\n        setPlayerHand([...playerHand]);\n        break;\n\n      case Deal.dealer:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n\n      case Deal.hidden:\n        hiddenCard.push(card);\n        setHiddenCard([...hiddenCard]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const revealCard = () => {\n    let hidden = hiddenCard.pop();\n    dealerHand.push(hidden);\n    setDealerHand([...dealerHand]);\n  }; // Player actions\n\n\n  const handleHit = () => {\n    drawCard(Deal.player);\n  };\n\n  const handleStand = () => {\n    revealCard();\n    setGameState(GameState.dealerTurn);\n  };\n\n  const handleDeal = () => {\n    setGameState(GameState.init);\n    setBalance(balance - betSize);\n  };\n\n  const checkWin = () => {\n    if (dealerScore > playerScore) {\n      setGame(Results.dealerWins);\n    } else if (dealerScore < playerScore) {\n      setGame(Results.playerWins);\n    } else if (dealerScore === playerScore) {\n      setGame(Results.push);\n    }\n\n    ;\n  }; // Resets game state\n\n\n  const reset = () => {\n    setHiddenCard([]);\n    setPlayerHand([]);\n    setPlayerScore(0);\n    setPlayerCount(0);\n    setDealerHand([]);\n    setDealerScore(0);\n    setDealerCount(0);\n    setBetSize(0);\n    setMessage(\"\");\n    setAnimation(\"\");\n    setGame(\"placeBets\");\n    setGameState(GameState.bet);\n  }; // console.table('Dealer: ', dealerHand)\n  // console.table('Player: ', playerHand)\n  // console.log('dealerScore: ', dealerScore)\n  // console.log('playerScore: ', playerScore)\n  // console.log('dealerCount: ', dealerCount)\n  // console.log('playerCount: ', playerCount)\n  // console.log('Game results: ', game)\n  // console.log('Game State: ', gameState)\n\n\n  console.log(gameState);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(DealerTitle, {\n      children: \"DEALER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealerHand, {\n      children: /*#__PURE__*/_jsxDEV(DealerUl, {\n        children: [hiddenCard.map(card => /*#__PURE__*/_jsxDEV(DealerLi, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            back: true,\n            height: \"150px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)), dealerHand.map(card => /*#__PURE__*/_jsxDEV(DealerLi, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            height: \"150px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealCards, {\n      balance: balance,\n      betSize: betSize,\n      gameState: gameState,\n      GameState: GameState,\n      handleDeal: handleDeal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerUI, {\n      children: /*#__PURE__*/_jsxDEV(ActionBtns, {\n        game: game,\n        GameState: GameState,\n        Results: Results,\n        dealerHand: dealerHand,\n        playerScore: playerScore,\n        handleStand: handleStand,\n        handleHit: handleHit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerHand, {\n      children: /*#__PURE__*/_jsxDEV(PlayerUl, {\n        children: playerHand.map(card => /*#__PURE__*/_jsxDEV(PlayerLi, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            height: \"150px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scores, {\n      gameState: gameState,\n      GameState: GameState,\n      playerScore: playerScore,\n      dealerScore: dealerScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Visuals, {\n      game: game,\n      gameState: gameState,\n      GameState: GameState,\n      betSize: betSize,\n      balance: balance,\n      playerHand: playerHand,\n      dealerHand: dealerHand,\n      handleClear: handleClear,\n      handleMax: handleMax,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Animation, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: animation,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"75xB7lfzqBYyJdspDdHbi/NzejM=\");\n\n_c = Game;\nexport default Game;\nconst Message = styledCom.div`\nposition:absolute;\nbottom:15%;\ncolor:white;\n`;\n_c2 = Message;\nconst Animation = styledCom.div`\nposition:absolute;\nbottom:35%;\n`;\n_c3 = Animation;\nconst PlayerUI = styledCom(Grid).attrs({\n  container: true\n})`\n  position: absolute;\n  height: 200px;\n  bottom:-3%;\n  font-size: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 0 0 10px black;\n  z-index: 29;\n  color: white;\n  font-family: \"Play\", sans-serif;\n  -webkit--select: none;\n  \n`; // Styled Bet Components\n// const Spacing = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   z-index:-10;\n// `;\n// const SetBetSize = styledCom(Grid).attrs({\n//   container: true,\n// })`\n//   position: absolute;\n//   width: 80%;\n//   height: 110px;\n//   margin: 0 auto;\n//   bottom: 1.5%;\n//   display: flex;\n//   color: black;\n//   justify-content: space-evenly;\n//   align-items: center;\n//   z-index: 400;\n// `;\n// const ClearBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n// const MaxBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n// const Grid10 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid20 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid100 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Bet10 = styledCom(Bet_10)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet20 = styledCom(Bet_20)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet50 = styledCom(Bet_50)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const Bet100 = styledCom(Bet_100)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n// const PlaceBetBtn = styledCom.button`\n//   transform: scale(1);\n//   background: transparent;\n//   width: 100px;\n//   height: 100px;\n//   outline: none;\n//   color: white;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//         transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(1);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const ClearBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const MaxBetBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// Styled Chips Components\n// const Chip10 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg10,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   bottom:-250px;\n//   margin-left:-20px;\n//   z-index: 8;\n// `;\n// const Chip20 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg20,\n// })`transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -80px;\n//   bottom: -200px;\n//   z-index: 6;\n// `;\n// const Chip50 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg50,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -155px;\n//   bottom: -135px;\n//   z-index: 4;\n// `;\n// const Chip100 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg100,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//   \"translateY(-36px)\"};\n//   margin-left: -240px;\n//   bottom: -45px;\n//   z-index: 2;\n// `;\n// const ChipsArea = styledCom(Grid).attrs({\n//   container: true, spacing: 8,\n// })`\n//   position: absolute;\n//   height:100px;\n//   bottom: 20%;\n//   display: inline-block;\n//   justify-content: center;\n//   align-items: center;\n//   pointer-events: none;\n// `;\n// const PlaceChip10 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip20 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// const PlaceChip100 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n// Styled Dealer Components\n\n_c4 = PlayerUI;\nconst DealerTitle = styledCom.h1`\nfont: 18px;\ncolor: white;\n`;\n_c5 = DealerTitle;\nconst DealerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\ntop: 10%;\n`;\n_c6 = DealerHand;\nconst DealerUl = styledCom.ul`\nlist-style: none;\n`;\n_c7 = DealerUl;\nconst DealerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`; // Styled Player Components\n\n_c8 = DealerLi;\nconst PlayerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\nbottom: 30%;\n`;\n_c9 = PlayerHand;\nconst PlayerUl = styledCom.ul`\nlist-style: none;\n`;\n_c10 = PlayerUl;\nconst PlayerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n_c11 = PlayerLi;\nconst Container = styledCom.div`\ndisplay:flex;\njustify-content:center;\nposition:absolute;\nheight:100px;\nwidth:100%;\nheight:100%;\n}\n`;\n_c12 = Container;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"Animation\");\n$RefreshReg$(_c4, \"PlayerUI\");\n$RefreshReg$(_c5, \"DealerTitle\");\n$RefreshReg$(_c6, \"DealerHand\");\n$RefreshReg$(_c7, \"DealerUl\");\n$RefreshReg$(_c8, \"DealerLi\");\n$RefreshReg$(_c9, \"PlayerHand\");\n$RefreshReg$(_c10, \"PlayerUl\");\n$RefreshReg$(_c11, \"PlayerLi\");\n$RefreshReg$(_c12, \"Container\");","map":{"version":3,"sources":["/home/josh/projects/llth-blackjack/blackjack/src/blackjack/Game.js"],"names":["React","useState","useEffect","Grid","styledCom","Functions","Deck","Card","DealCards","ActionBtns","Scores","Visuals","Win","Lose","Game","GameState","bet","init","playerTurn","dealerTurn","Deal","player","dealer","hidden","Results","blackjack","playerWins","dealerWins","playerBusts","dealerBusts","push","gameState","setGameState","game","setGame","balance","setBalance","betSize","setBetSize","deck","setDeck","hiddenCard","setHiddenCard","dealerHand","setDealerHand","dealerScore","setDealerScore","playerHand","setPlayerHand","playerScore","setPlayerScore","dealerCount","setDealerCount","playerCount","setPlayerCount","message","setMessage","animation","setAnimation","dealHands","calculate","setTimeout","reset","checkWin","drawCard","Math","round","shuffle","newDeck","JSON","parse","stringify","handleClear","handleMax","handleClick","e","value","target","parseInt","alert","dealType","length","randomIndex","floor","random","card","splice","console","log","dealCard","revealCard","pop","handleHit","handleStand","handleDeal","map","Message","div","Animation","PlayerUI","attrs","container","DealerTitle","h1","DealerHand","DealerUl","ul","DealerLi","li","PlayerHand","PlayerUl","PlayerLi","Container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Grid } from \"@mui/material/\";\nimport styledCom from 'styled-components';\n\nimport Functions from \"./Javascript.js\";\nimport Deck from \"./cards/Deck.js\";\nimport Card from \"./cards/RenderCard.js\";\nimport DealCards from \"./cards/DealCards.js\";\nimport ActionBtns from \"./player/Actions.js\";\nimport Scores from \"./UI/Scores.js\";\nimport Visuals from \"./UI/Visuals.js\";\n    import Win from '../imgs/gifs/_blowing_kiss[window]4x.gif';\n    import Lose from '../imgs/gifs/_laughing_devil[window]4x.gif';\n\n// Core Game Component\nconst Game = () => {\n\n//   // Initializes and holds game state\n  const GameState = {\n    bet: 'bet',\n    init: 'init',\n    playerTurn: 'playerTurn',\n    dealerTurn: 'dealerTurn',\n  };\n  const Deal = {\n    player: 'player',\n    dealer: 'dealer',\n    hidden: 'hidden',\n  };\n  const Results = {\n    blackjack: 'blackjack',\n    playerWins: 'playerWins',\n    dealerWins: 'dealerWins',\n    playerBusts: 'playerBusts',\n    dealerBusts: 'dealerBusts',\n    push: 'push',\n  };\n\n  const [gameState, setGameState] = useState(GameState.bet);\n  const [game, setGame] = useState(\"placeBets\");  \n  const [balance, setBalance] = useState(5000);\n  const [betSize, setBetSize] = useState(0);\n  const [deck, setDeck] = useState(Deck);\n  const [hiddenCard, setHiddenCard] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerCount, setDealerCount] = useState(0);\n  const [playerCount, setPlayerCount] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [animation, setAnimation] = useState(\"\");\n\n  // Initialize Game\n  useEffect(() => {\n    if (gameState === GameState.init) {\n      dealHands();\n      setGameState(GameState.playerTurn); \n    }\n  }, [gameState]);\n\n  // Update scores\n  useEffect(() => {\n    calculate(dealerHand, setDealerScore);\n    setDealerCount(dealerCount + 1)\n  }, [dealerHand, hiddenCard]);\n\n  useEffect(() => {\n    calculate(playerHand, setPlayerScore);\n    setPlayerCount(playerCount + 1)\n  }, [playerHand]);\n\n  // Player turn\n  useEffect(() => {\n      if (playerCount === 2 &&  playerScore === 21 && dealerScore !==21){\n        setMessage(\"Blackjack!\")\n        setAnimation(Win);\n        setTimeout(() => reset(), [4000])\n\n      };\n      if (playerScore > 21) {\n        setGame(Results.playerBusts)\n        setTimeout(() => reset(), [4000])\n\n      };\n  }, [playerCount]);\n\n  // Dealer turn\n  useEffect(() => {\n    if(gameState === GameState.dealerTurn) {\n      if(dealerScore > 21) {\n        setGame(Results.dealerBusts)\n      } else\n        if (dealerScore >= 17 && dealerScore <= 21) {\n          checkWin();\n        }\n        else {\n          setTimeout(()=>\n          drawCard(Deal.dealer), [500])\n        }\n      }\n    }, [dealerCount]);\n\n    // handle results\n  useEffect(() => {\n    if (game === Results.blackjack) {\n    setTimeout(()=>setBalance(Math.round((balance + (betSize * 2.5)) * 100) / 100), [3500])\n    setTimeout(()=>setMessage(\"Blackjack!\"), [1000])\n    setTimeout(()=>setAnimation(Win), [1000])\n      setTimeout(()=> reset(), [4000]);\n  } else if (game === Results.playerBusts) {\n    setTimeout(()=>setMessage(\"Player Busted!\"), [1000])\n    setTimeout(()=>setAnimation(Lose), [1000])\n      setTimeout(()=> reset(), [4000]);\n  } else if (game === Results.dealerBusts) {\n    setTimeout(()=>setBalance(Math.round((balance + (betSize * 2)) * 100) / 100), [4000])\n    setTimeout(()=>setMessage(\"Dealer Busted!\"), [1000])\n    setTimeout(()=>setAnimation(Win), [1000])\n      setTimeout(()=> reset(), [4000]);\n  } else if (game === Results.playerWins) {\n    setTimeout(()=>setBalance(Math.round((balance + (betSize * 2)) * 100) / 100), [4000])\n    setTimeout(()=>setMessage(\"Player Wins!\"), [1000])\n    setTimeout(()=>setAnimation(Win), [1000])\n      setTimeout(()=> reset(), [4000]);\n  } else if (game === Results.dealerWins) {\n    setTimeout(()=>setMessage(\"Dealer Wins!\"), [1000])\n    setTimeout(()=>setAnimation(Lose), [1000])\n      setTimeout(()=> reset(), [4000]);\n  } else if (game === Results.push) {\n    setTimeout(()=>setBalance(Math.round((balance + (betSize * 1)) * 100) / 100), [4000])\n    setTimeout(()=>setMessage(\"Push!\"), [1000])\n      setTimeout(()=> reset(), [4000]);\n    }\n}, [game]);\n  \n // Game functions\nconst shuffle = () => {\n  let newDeck = JSON.parse(JSON.stringify(Deck))\n    return (\n      setDeck(newDeck)\n    )\n  };\n  const handleClear = () => {\n    setBetSize(0)\n  };\n  const handleMax = () => {\n    setBetSize(balance)\n  };\n  const handleClick = (e) => {\n    let value = (e.target.value);\n    if (parseInt(betSize)+parseInt(value) > parseInt(balance)){\n      alert(\"Not Enough Minerals\");\n    } else {\n    setBetSize(parseInt(betSize)+parseInt(value))};\n  };\n  const dealHands = () => {\n    setTimeout(() => drawCard(Deal.player), [800])\n    setTimeout(() => drawCard(Deal.hidden), [1300])\n    setTimeout(() => drawCard(Deal.player), [1800])\n    setTimeout(() => drawCard(Deal.dealer), [2300])\n    setTimeout(() => setGame(\"inProgress\"), [2800])\n  };\n  const drawCard = (dealType) => {\n    if (deck.length > 5) {\n      const randomIndex = Math.floor(Math.random() * deck.length);\n      var card = deck[randomIndex];\n      deck.splice(randomIndex, 1);\n      setDeck([...deck]);\n      console.log(card, 'Remaining Cards:', deck.length);\n      dealCard(dealType, card)\n    }; \n    if (deck.length <= 5){\n    shuffle();\n    dealCard(dealType, card);\n    }\n  };\n  const dealCard = (dealType, card) => {\n    switch (dealType) {\n      case Deal.player:\n        playerHand.push(card);\n        setPlayerHand([...playerHand]);\n        break;\n      case Deal.dealer:\n        dealerHand.push(card);\n        setDealerHand([...dealerHand]);\n        break;\n      case Deal.hidden:\n        hiddenCard.push(card);\n        setHiddenCard([...hiddenCard]);\n        break;\n      default:\n        break;\n    }\n  };\n  const revealCard = () => {\n    let hidden = hiddenCard.pop() \n    dealerHand.push(hidden)\n    setDealerHand([...dealerHand])\n  };\n\n  // Player actions\n  const handleHit = () => {\n    drawCard(Deal.player)\n  };\n  const handleStand = () => {\n    revealCard();\n    setGameState(GameState.dealerTurn);\n  };\n  const handleDeal = () => {\n    setGameState(GameState.init)\n    setBalance(balance - betSize)\n  };\n  const checkWin = () => {\n  if(dealerScore > playerScore) {\n    setGame(Results.dealerWins);\n  } else\n  if(dealerScore < playerScore) {\n    setGame(Results.playerWins);\n  } else\n  if(dealerScore === playerScore) {\n    setGame(Results.push);\n  };\n}\n  // Resets game state\n  const reset = () => {\n    setHiddenCard([]);\n    setPlayerHand([]);\n    setPlayerScore(0);\n    setPlayerCount(0);\n    setDealerHand([]);\n    setDealerScore(0);\n    setDealerCount(0);\n    setBetSize(0);\n    setMessage(\"\");\n    setAnimation(\"\");\n    setGame(\"placeBets\");\n    setGameState(GameState.bet)\n    };\n  \n    // console.table('Dealer: ', dealerHand)\n    // console.table('Player: ', playerHand)\n    // console.log('dealerScore: ', dealerScore)\n    // console.log('playerScore: ', playerScore)\n    // console.log('dealerCount: ', dealerCount)\n    // console.log('playerCount: ', playerCount)\n    // console.log('Game results: ', game)\n    // console.log('Game State: ', gameState)\n\n    console.log(gameState)\n  return (\n    <Container>\n      <DealerTitle>DEALER</DealerTitle>\n      <DealerHand>\n        <DealerUl>\n          {hiddenCard.map(card =>\n            <DealerLi key={card}>\n              <Card card={card} back={true} height=\"150px\"/>\n            </DealerLi>)}\n          {dealerHand.map(card =>\n            <DealerLi key={card}>\n              <Card card={card} height=\"150px\"/>\n            </DealerLi>)}\n        </DealerUl>\n      </DealerHand>\n      <DealCards \n        balance={balance}\n        betSize={betSize}\n        gameState={gameState}\n        GameState={GameState} \n          handleDeal={handleDeal}\n          />\n      <PlayerUI>\n        <ActionBtns\n          game={game}\n          GameState={GameState}\n          Results={Results}\n          dealerHand={dealerHand}\n          playerScore={playerScore}\n            handleStand={handleStand} \n            handleHit={handleHit}\n            />\n      </PlayerUI>\n      <PlayerHand>\n        <PlayerUl>\n          {playerHand.map(card => \n            <PlayerLi key={card}>\n              <Card card={card} height=\"150px\"/>\n            </PlayerLi>)}\n        </PlayerUl>\n      </PlayerHand>\n      <Scores \n        gameState={gameState}\n        GameState={GameState}\n        playerScore={playerScore}\n        dealerScore={dealerScore}/>\n     \n      <Visuals \n        game={game}\n        gameState={gameState}\n        GameState={GameState}\n        betSize={betSize}\n        balance={balance}\n        playerHand={playerHand}\n        dealerHand={dealerHand}\n          handleClear={handleClear}\n          handleMax={handleMax}\n          handleClick={handleClick}\n          /> \n      <Message><h1>{message}</h1></Message>\n      <Animation><img src={animation} alt=\"\"/></Animation>\n    </Container>\n  )\n};\n\nexport default Game;\n\nconst Message = styledCom.div`\nposition:absolute;\nbottom:15%;\ncolor:white;\n`;\n\nconst Animation = styledCom.div`\nposition:absolute;\nbottom:35%;\n`;\n\nconst PlayerUI = styledCom(Grid).attrs({\n  container: true,\n})`\n  position: absolute;\n  height: 200px;\n  bottom:-3%;\n  font-size: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 0 0 10px black;\n  z-index: 29;\n  color: white;\n  font-family: \"Play\", sans-serif;\n  -webkit--select: none;\n  \n`;\n\n\n// Styled Bet Components\n\n// const Spacing = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   z-index:-10;\n// `;\n\n// const SetBetSize = styledCom(Grid).attrs({\n//   container: true,\n// })`\n//   position: absolute;\n//   width: 80%;\n//   height: 110px;\n//   margin: 0 auto;\n//   bottom: 1.5%;\n//   display: flex;\n//   color: black;\n//   justify-content: space-evenly;\n//   align-items: center;\n//   z-index: 400;\n// `;\n\n// const ClearBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n\n// const MaxBet = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//    `;\n\n// const Grid10 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Grid20 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n// const Grid50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Grid100 = styledCom(Grid).attrs({\n//   item: true,\n// })` \n//   display:absolute;\n//   justifyContent:center;\n//   alignItems:center;\n//   width: 120px;\n//   height: 150px;\n// `;\n\n// const Bet10 = styledCom(Bet_10)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet20 = styledCom(Bet_20)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet50 = styledCom(Bet_50)`\n//   transform: scale(1.1);  \n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const Bet100 = styledCom(Bet_100)`\n//   transform: scale(1.1);\n//     @media (max-width: 1450px) {\n//       transform: scale(1.0);\n//     }\n//     @media (max-width: 1200px) {\n//       transform: scale(0.9);\n//     }\n// `;\n\n// const PlaceBetBtn = styledCom.button`\n//   transform: scale(1);\n//   background: transparent;\n//   width: 100px;\n//   height: 100px;\n//   outline: none;\n//   color: white;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//         transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(1);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n\n// const ClearBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   font-family: \"Play\", sans-serif;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n// const MaxBetBtn = styledCom.button`\n//   background: transparent;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   user-select: none;\n//   -webkit-user-select: none;\n//     &:hover {\n//       transform: scale(1.1);\n//     }\n//     &:active {\n//         transform: scale(0.9);\n//     }\n//       @media (max-width: 1450px) {\n//         transform: scale(1.0);\n//       }\n//       @media (max-width: 1200px) {\n//         transform: scale(0.9);\n//       }\n// `;\n\n// Styled Chips Components\n\n// const Chip10 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg10,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   bottom:-250px;\n//   margin-left:-20px;\n//   z-index: 8;\n// `;\n\n// const Chip20 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg20,\n// })`transform: scale(0.7);\n//   position: absolute;\n//   transform: ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -80px;\n//   bottom: -200px;\n//   z-index: 6;\n// `;\n\n// const Chip50 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg50,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//     \"translateY(-36px)\"};\n//   margin-left: -155px;\n//   bottom: -135px;\n//   z-index: 4;\n// `;\n\n// const Chip100 = styledCom.img.attrs({\n//   visibility: \"visible\",\n//   src: Svg100,\n// })`\n//   transform: scale(0.7);\n//   position: absolute;\n//   transform: \n//     ${(props) =>\n//     props.one === \"0\" ? \"translateY(-0px)\" : \n//     props.one === \"1\" ? \"translateY(-12px)\" : \n//     props.one === \"2\" ? \"translateY(-24px)\" : \n//   \"translateY(-36px)\"};\n//   margin-left: -240px;\n//   bottom: -45px;\n//   z-index: 2;\n// `;\n\n// const ChipsArea = styledCom(Grid).attrs({\n//   container: true, spacing: 8,\n// })`\n//   position: absolute;\n//   height:100px;\n//   bottom: 20%;\n//   display: inline-block;\n//   justify-content: center;\n//   align-items: center;\n//   pointer-events: none;\n// `;\n\n// const PlaceChip10 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip20 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip50 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n// const PlaceChip100 = styledCom(Grid).attrs({\n//   item: true,\n// })`\n//   width: 100px;\n//   height: 200px;\n// `;\n\n\n\n\n// Styled Dealer Components\nconst DealerTitle = styledCom.h1`\nfont: 18px;\ncolor: white;\n`;\n\nconst DealerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\ntop: 10%;\n`;\n\nconst DealerUl = styledCom.ul`\nlist-style: none;\n`;\n\nconst DealerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n\n// Styled Player Components\n\nconst PlayerHand = styledCom.div`\ndisplay: flex;\njustify-content: center;\nposition: absolute;\nheight: 140px;\nwidth: 100%;\nbottom: 30%;\n`;\n\nconst PlayerUl = styledCom.ul`\nlist-style: none;\n`;\n\nconst PlayerLi = styledCom.li`\ndisplay: inline-block;\nmargin: 0 0 0 -20px;\n`;\n\nconst Container = styledCom.div`\ndisplay:flex;\njustify-content:center;\nposition:absolute;\nheight:100px;\nwidth:100%;\nheight:100%;\n}\n`;\n"]},"metadata":{},"sourceType":"module"}